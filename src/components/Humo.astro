<div id="smoke-bkg" class="fixed top-0 -z-10 h-full w-full"></div>

<script type="module">
  import * as THREE from "https://cdn.skypack.dev/three@0.150.1";

  // Variables iniciales de tamaño de ventana
  let w = window.innerWidth;
  let h = window.innerHeight;

  // Crear nueva escena
  const scene = new THREE.Scene();

  // Crear cámara
  const camera = new THREE.PerspectiveCamera(75, w / h, 1, 1000);
  camera.position.z = 400;

  // Crear renderizador WebGL
  const renderer = new THREE.WebGLRenderer({ alpha: true });
  renderer.setSize(w, h);
  renderer.setClearColor(0x000000, 0);

  // Añadir canvas al div
  const bkg = document.getElementById("smoke-bkg");
  bkg.appendChild(renderer.domElement);

  // Luces
  const ambientLight = new THREE.AmbientLight(0xffffff, 0.5);
  scene.add(ambientLight);

  const directionalLight = new THREE.DirectionalLight(0xffffff, 0.5);
  directionalLight.position.set(0, 0, 1);
  scene.add(directionalLight);

  // Cargar textura
  const loader = new THREE.TextureLoader();
  loader.crossOrigin = "";

  loader.load("/Vapor.webp", (texture) => {
    const smokeParticles = [];
    const smokeGeometry = new THREE.PlaneGeometry(300, 300);
    const smokeMaterial = new THREE.MeshLambertMaterial({
      map: texture,
      transparent: true,
      opacity: 0.15,
      depthWrite: false,
    });

    const NUM_OF_PARTICLES = 100;

    for (let i = 0; i < NUM_OF_PARTICLES; i++) {
      const particle = new THREE.Mesh(smokeGeometry, smokeMaterial);
      particle.position.set(
        Math.random() * 500 - 250,
        Math.random() * 600 - 300,
        Math.random() * 100 - 50
      );
      particle.rotation.z = Math.random() * 2 * Math.PI;
      scene.add(particle);
      smokeParticles.push(particle);
    }

    // Animación
    function animate() {
      requestAnimationFrame(animate);

      smokeParticles.forEach((p) => {
        p.rotation.z += 0.002;
      });

      renderer.render(scene, camera);
    }

    // Función de resize
    function onResize() {
      w = window.innerWidth;
      h = window.innerHeight;

      camera.aspect = w / h;
      camera.updateProjectionMatrix();

      renderer.setSize(w, h);
    }

    window.addEventListener("resize", onResize);

    animate();
  });
</script>